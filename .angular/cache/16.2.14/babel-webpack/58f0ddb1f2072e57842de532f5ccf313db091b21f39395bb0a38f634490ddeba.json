{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { AddTaskAction } from './store/actions/task.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nfunction AppComponent_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r1.title, \" \");\n  }\n}\nlet AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(fb, store) {\n      this.fb = fb;\n      this.store = store;\n      this.totalTodos = 0;\n      this.formGroup = this.fb.group({\n        title: ['', Validators.required],\n        id: 0\n      });\n      // https://blog.logrocket.com/angular-state-management-made-simple-with-ngrx/\n    }\n\n    ngOnInit() {\n      this.tasks$ = this.store.select(store => store.tasks);\n    }\n    saveTodo() {\n      this.store.dispatch(new AddTaskAction(this.formGroup.value));\n      this.formGroup.reset();\n    }\n    static #_ = this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Store));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"my-app\"]],\n      decls: 16,\n      vars: 5,\n      consts: [[1, \"title\"], [3, \"formGroup\", \"submit\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"title\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h1\", 0);\n          i0.ɵɵtext(1, \"Todos App\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-card\")(3, \"mat-card-content\");\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(5, \"br\");\n          i0.ɵɵelementStart(6, \"form\", 1);\n          i0.ɵɵlistener(\"submit\", function AppComponent_Template_form_submit_6_listener() {\n            return ctx.saveTodo();\n          });\n          i0.ɵɵelementStart(7, \"mat-form-field\", 2)(8, \"mat-label\");\n          i0.ɵɵtext(9, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 3);\n          i0.ɵɵelementStart(11, \"mat-hint\");\n          i0.ɵɵtext(12, \"Hit enter to save!!!\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(13, \"ul\");\n          i0.ɵɵtemplate(14, AppComponent_li_14_Template, 2, 1, \"li\", 4);\n          i0.ɵɵpipe(15, \"async\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\"Total Todos: \", ctx.totalTodos, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(15, 3, ctx.tasks$));\n        }\n      },\n      dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.MatCard, i4.MatCardContent, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatHint, i3.AsyncPipe],\n      styles: [\".title[_ngcontent-%COMP%]{text-align:center}.example-full-width[_ngcontent-%COMP%]{width:100%}\"]\n    });\n  }\n  return AppComponent;\n})();\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}